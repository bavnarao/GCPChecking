(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('jquery'), require('datatables.net'), require('@angular/common')) :
	typeof define === 'function' && define.amd ? define(['exports', '@angular/core', 'jquery', 'datatables.net', '@angular/common'], factory) :
	(factory((global.angular = global.angular || {}, global.angular.datatables = global.angular.datatables || {}),global.ng.core,null,null,global.ng.common));
}(this, (function (exports,_angular_core,jquery,datatables_net,_angular_common) { 'use strict';

/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE
 */
var DataTableDirective = (function () {
    function DataTableDirective(el) {
        this.el = el;
        this.dtOptions = {};
    }
    DataTableDirective.prototype.ngOnInit = function () {
        var _this = this;
        this.dtInstance = new Promise(function (resolve, reject) {
            Promise.resolve(_this.dtOptions).then(function (dtOptions) {
                var dt = $(_this.el.nativeElement).DataTable(dtOptions);
                resolve(dt);
            });
        });
    };
    DataTableDirective.decorators = [
        { type: _angular_core.Directive, args: [{
                    selector: '[datatable]'
                },] },
    ];
    /** @nocollapse */
    DataTableDirective.ctorParameters = function () { return [
        { type: _angular_core.ElementRef, decorators: [{ type: _angular_core.Inject, args: [_angular_core.ElementRef,] },] },
    ]; };
    DataTableDirective.propDecorators = {
        'dtOptions': [{ type: _angular_core.Input },],
    };
    return DataTableDirective;
}());

/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE
 */
var DataTablesModule = (function () {
    function DataTablesModule() {
    }
    DataTablesModule.forRoot = function () {
        return {
            ngModule: DataTablesModule
        };
    };
    DataTablesModule.decorators = [
        { type: _angular_core.NgModule, args: [{
                    imports: [_angular_common.CommonModule],
                    declarations: [DataTableDirective],
                    exports: [DataTableDirective]
                },] },
    ];
    /** @nocollapse */
    DataTablesModule.ctorParameters = function () { return []; };
    return DataTablesModule;
}());

/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE
 */
/**
 * @module
 * @description
 * Entry point from which you should import all public library APIs.
 */

exports.DataTableDirective = DataTableDirective;
exports.DataTablesModule = DataTablesModule;

Object.defineProperty(exports, '__esModule', { value: true });

})));
